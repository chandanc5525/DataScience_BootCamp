# Day 01

-- Step 1: Create Database : Mydb_ItVedant

# Syntax: Create Database If Not Exists <DatabaseName>;

Create Database If Not Exists Mydb_ItVedant;

# Step 2: Use Database: Mydb_ItVedant

# Synatx: Use <DatabaseName>;

Use Mydb_ItVedant;

# Show Databases

# Synatx: Show Databases;

Show Databases;


# Step 3: Create Tables inside Database: Mydb_ItVedant

# Synatx: Create Table <TableName> (Field1 Datatype, Field2 Datatype); 



CREATE TABLE Employee (
    Id INT,
    Name VARCHAR(20),
    Age INT
); 

# Checking Tables inside Database

Show Tables;

# Using Select Statement: Retrival of Data

# Syntax: Select * From <TableName>;
# Syntax: Select Field1, Field2 From <TableName>;

SELECT 
    *
FROM
    Employee;
    
SELECT 
    Name, Age
FROM
    Employee;
    
# Day 02:

# Insert Statement : Inserting the Values inside Table 

Insert into Employee Values (1,'Modi',30);

Insert into Employee (Id,Name,Age) Values (2,'Rahul',32);

Select * From Employee;

# Using Aggregate Function with Select Statement

SELECT 
    AVG(Age) AS Average_Age
FROM
    Employee;

SELECT 
    COUNT(ID) AS Total_Count
FROM
    Employee;
    
Select Count(Distinct(Age)) As Distinct_Age
From Employee;

SELECT 
    MIN(Age) AS Minimum_Age,
    MAX(Age) AS Maximum_Age,
    AVG(Age) AS Average_Age
FROM
    Employee;
    
SELECT 
    COUNT(*) AS Total_Count
FROM
    Employee;
    
# Insert Multiple Entries in Table

Insert into Employee Values 
(3,'Amit',30),
(4,'Rohan',36),
(5,'Rihan',45),
(6,'Priti',45);

Select * From Employee;

# Using Like Operator: Like Operator is used to get the data based on filter
# Where is used for Condition : Conditional Statement : Where Clause
# 'R%':-> This will gives the output starting with letter 'R'
# '%R':-> This will gives the output ending with letter 'R'
# '[A-R]%':-> This will gives the output start with letter A and ending with letter 'R'

SELECT 
    Name
FROM
    Employee
WHERE
    Name LIKE 'R%'; 

# Exercise:
-- Q1. Calculate Average Age of People 
-- Q2. Calculate Unique Age group of People 
-- Q3. Evaluate the name of the people having age 30 
-- Q4. Calculate Count of people having age greater than 30

-- A1.
SELECT 
    AVG(Age) AS Average_Age
FROM
    Employee;

-- A2.
SELECT 
    COUNT(DISTINCT (Age)) AS Distinct_AgeGroup
FROM
    Employee;

-- A3.
SELECT 
    Name
FROM
    Employee
WHERE
    Age = 30;
    
-- A4. 
SELECT 
    COUNT(*) AS Total_Count
FROM
    Employee
WHERE
    Age > 30;








